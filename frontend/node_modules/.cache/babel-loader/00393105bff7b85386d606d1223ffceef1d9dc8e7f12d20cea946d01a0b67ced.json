{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\SCHOOL MANAGEMENT SYSTEM 2\\\\frontend\\\\src\\\\components\\\\TeacherForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport bcrypt from 'bcryptjs';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeacherForm = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [teachSubject, setTeachSubject] = useState('');\n  const [teachSclass, setTeachSclass] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Hash the password before sending it\n    const salt = await bcrypt.genSalt(10);\n    const hashedPassword = await bcrypt.hash(password, salt);\n    const teacher = {\n      name,\n      email,\n      password: hashedPassword,\n      teachSubject,\n      teachSclass\n    };\n    const response = await fetch('http://localhost:5000/api/teacher', {\n      method: 'POST',\n      body: JSON.stringify(teacher),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n    }\n    if (response.ok) {\n      setName('');\n      setEmail('');\n      setPassword('');\n      setTeachSubject('');\n      setTeachSclass('');\n      setError(null);\n      console.log('New teacher added', json);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"teacher-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a new teacher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Teacher Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setName(e.target.value),\n      value: name,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      onChange: e => setEmail(e.target.value),\n      value: email,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: e => setPassword(e.target.value),\n      value: password,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Teaching Subject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTeachSubject(e.target.value),\n      value: teachSubject,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Teaching Class (ID)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTeachSclass(e.target.value),\n      value: teachSclass,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Teacher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(TeacherForm, \"KVTPE35F3SEcvf8y8VY2GQD6BfE=\");\n_c = TeacherForm;\nexport default TeacherForm;\nvar _c;\n$RefreshReg$(_c, \"TeacherForm\");","map":{"version":3,"names":["useState","bcrypt","jsxDEV","_jsxDEV","TeacherForm","_s","name","setName","email","setEmail","password","setPassword","teachSubject","setTeachSubject","teachSclass","setTeachSclass","error","setError","handleSubmit","e","preventDefault","salt","genSalt","hashedPassword","hash","teacher","response","fetch","method","body","JSON","stringify","headers","json","ok","console","log","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","required","_c","$RefreshReg$"],"sources":["E:/PROJECT/SCHOOL MANAGEMENT SYSTEM 2/frontend/src/components/TeacherForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport bcrypt from 'bcryptjs'\r\nimport './form.css';\r\n\r\nconst TeacherForm = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [teachSubject, setTeachSubject] = useState('');\r\n    const [teachSclass, setTeachSclass] = useState('');\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Hash the password before sending it\r\n        const salt = await bcrypt.genSalt(10);\r\n        const hashedPassword = await bcrypt.hash(password, salt);\r\n\r\n        const teacher = { name, email, password: hashedPassword, teachSubject, teachSclass };\r\n\r\n        const response = await fetch('http://localhost:5000/api/teacher', {\r\n            method: 'POST',\r\n            body: JSON.stringify(teacher),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n        const json = await response.json();\r\n\r\n        if (!response.ok) {\r\n            setError(json.error);\r\n        }\r\n        if (response.ok) {\r\n            setName('');\r\n            setEmail('');\r\n            setPassword('');\r\n            setTeachSubject('');\r\n            setTeachSclass('');\r\n            setError(null);\r\n            console.log('New teacher added', json);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className=\"teacher-form\" onSubmit={handleSubmit}>\r\n            <h3>Add a new teacher</h3>\r\n\r\n            <label>Teacher Name</label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n                required\r\n            />\r\n\r\n            <label>Email</label>\r\n            <input\r\n                type=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                required\r\n            />\r\n\r\n            <label>Password</label>\r\n            <input\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                value={password}\r\n                required\r\n            />\r\n\r\n            <label>Teaching Subject</label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={(e) => setTeachSubject(e.target.value)}\r\n                value={teachSubject}\r\n                required\r\n            />\r\n\r\n            <label>Teaching Class (ID)</label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={(e) => setTeachSclass(e.target.value)}\r\n                value={teachSclass}\r\n                required\r\n            />\r\n\r\n            <button type=\"submit\">Add Teacher</button>\r\n            {error && <div className=\"error\">{error}</div>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TeacherForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}