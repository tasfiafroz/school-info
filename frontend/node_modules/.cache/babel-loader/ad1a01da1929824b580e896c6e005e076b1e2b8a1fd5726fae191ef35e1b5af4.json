{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\SCHOOL MANAGEMENT SYSTEM 2\\\\frontend\\\\src\\\\pages\\\\admin\\\\NoticePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NoticeForm from '../../components/NoticeForm';\nimport NoticeDetails from '../../components/NoticeDetails';\nimport Sidebar from '../../components/AdminNav';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoticePage = () => {\n  _s();\n  const [notices, setNotices] = useState([]);\n  const [selectedNotice, setSelectedNotice] = useState(null); // For update functionality\n\n  // Fetch all notices\n  useEffect(() => {\n    const fetchNotices = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/notice');\n        const json = await response.json();\n        if (response.ok) {\n          setNotices(json);\n        } else {\n          console.error('Failed to fetch notice details:', json);\n        }\n      } catch (error) {\n        console.error('Error fetching notice details:', error);\n      }\n    };\n    fetchNotices();\n  }, []);\n\n  // Handle delete notice\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/notice/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        // Remove the deleted notice from the state\n        setNotices(notices.filter(notice => notice._id !== id));\n      } else {\n        console.error('Failed to delete notice');\n      }\n    } catch (error) {\n      console.error('Error deleting notice:', error);\n    }\n  };\n\n  // Handle update notice\n  const handleUpdate = async (id, updatedData) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/notice/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedData)\n      });\n      if (response.ok) {\n        const updatedNotice = await response.json();\n        // Update the notice in the state\n        setNotices(notices.map(notice => notice._id === id ? updatedNotice : notice));\n        setSelectedNotice(null); // Close the update form\n      } else {\n        console.error('Failed to update notice:', await response.json());\n      }\n    } catch (error) {\n      console.error('Error updating notice:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"notice-h2\",\n        children: \"Notices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notice\",\n        children: notices.map(notice => /*#__PURE__*/_jsxDEV(NoticeDetails, {\n          notice: notice,\n          onDelete: () => handleDelete(notice._id),\n          onUpdate: () => setSelectedNotice(notice) // Pass the notice to update\n        }, notice._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), selectedNotice && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"update-formN\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Update Notice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const updatedData = {\n              title: formData.get('title'),\n              details: formData.get('details'),\n              date: formData.get('date')\n            };\n            handleUpdate(selectedNotice._id, updatedData);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"title\",\n              defaultValue: selectedNotice.title,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Details:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"details\",\n              defaultValue: selectedNotice.details,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"date\",\n              defaultValue: new Date(selectedNotice.date).toISOString().split('T')[0],\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setSelectedNotice(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(NoticeForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(NoticePage, \"hMuvnDPqbwl1mSVHh2421z/4yIE=\");\n_c = NoticePage;\nexport default NoticePage;\nvar _c;\n$RefreshReg$(_c, \"NoticePage\");","map":{"version":3,"names":["React","useEffect","useState","NoticeForm","NoticeDetails","Sidebar","jsxDEV","_jsxDEV","NoticePage","_s","notices","setNotices","selectedNotice","setSelectedNotice","fetchNotices","response","fetch","json","ok","console","error","handleDelete","id","method","filter","notice","_id","handleUpdate","updatedData","headers","body","JSON","stringify","updatedNotice","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onDelete","onUpdate","onSubmit","e","preventDefault","formData","FormData","target","title","get","details","date","type","name","defaultValue","required","Date","toISOString","split","onClick","_c","$RefreshReg$"],"sources":["E:/PROJECT/SCHOOL MANAGEMENT SYSTEM 2/frontend/src/pages/admin/NoticePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport NoticeForm from '../../components/NoticeForm';\r\nimport NoticeDetails from '../../components/NoticeDetails';\r\nimport Sidebar from '../../components/AdminNav';\r\nimport './style.css';\r\n\r\nconst NoticePage = () => {\r\n    const [notices, setNotices] = useState([]);\r\n    const [selectedNotice, setSelectedNotice] = useState(null); // For update functionality\r\n\r\n    // Fetch all notices\r\n    useEffect(() => {\r\n        const fetchNotices = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/notice');\r\n                const json = await response.json();\r\n\r\n                if (response.ok) {\r\n                    setNotices(json);\r\n                } else {\r\n                    console.error('Failed to fetch notice details:', json);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching notice details:', error);\r\n            }\r\n        };\r\n\r\n        fetchNotices();\r\n    }, []);\r\n\r\n    // Handle delete notice\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/notice/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (response.ok) {\r\n                // Remove the deleted notice from the state\r\n                setNotices(notices.filter((notice) => notice._id !== id));\r\n            } else {\r\n                console.error('Failed to delete notice');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting notice:', error);\r\n        }\r\n    };\r\n\r\n    // Handle update notice\r\n    const handleUpdate = async (id, updatedData) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/notice/${id}`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(updatedData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const updatedNotice = await response.json();\r\n                // Update the notice in the state\r\n                setNotices(notices.map((notice) =>\r\n                    notice._id === id ? updatedNotice : notice\r\n                ));\r\n                setSelectedNotice(null); // Close the update form\r\n            } else {\r\n                console.error('Failed to update notice:', await response.json());\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating notice:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Sidebar />\r\n            <div>\r\n                <h2 className='notice-h2'>Notices</h2>\r\n                <div className='notice'>\r\n                    {notices.map((notice) => (\r\n                        <NoticeDetails\r\n                            key={notice._id}\r\n                            notice={notice}\r\n                            onDelete={() => handleDelete(notice._id)}\r\n                            onUpdate={() => setSelectedNotice(notice)} // Pass the notice to update\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Update Form */}\r\n                {selectedNotice && (\r\n                    <div className=\"update-formN\">\r\n                        <h3>Update Notice</h3>\r\n                        <form\r\n                            onSubmit={(e) => {\r\n                                e.preventDefault();\r\n                                const formData = new FormData(e.target);\r\n                                const updatedData = {\r\n                                    title: formData.get('title'),\r\n                                    details: formData.get('details'),\r\n                                    date: formData.get('date'),\r\n                                };\r\n                                handleUpdate(selectedNotice._id, updatedData);\r\n                            }}\r\n                        >\r\n                            <label>\r\n                                Title:\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"title\"\r\n                                    defaultValue={selectedNotice.title}\r\n                                    required\r\n                                />\r\n                            </label>\r\n                            <label>\r\n                                Details:\r\n                                <textarea\r\n                                    name=\"details\"\r\n                                    defaultValue={selectedNotice.details}\r\n                                    required\r\n                                />\r\n                            </label>\r\n                            <label>\r\n                                Date:\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    defaultValue={new Date(selectedNotice.date).toISOString().split('T')[0]}\r\n                                    required\r\n                                />\r\n                            </label>\r\n                            <button type=\"submit\">Save</button>\r\n                            <button type=\"button\" onClick={() => setSelectedNotice(null)}>\r\n                                Cancel\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n\r\n                <NoticeForm />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoticePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}