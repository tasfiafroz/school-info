{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT\\\\SCHOOL MANAGEMENT SYSTEM 2\\\\frontend\\\\src\\\\pages\\\\student\\\\Result.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  const {\n    rollNum: paramRollNum\n  } = useParams(); // Get rollNum from URL\n  const storedRollNum = localStorage.getItem(\"rollNum\"); // Get rollNum from localStorage\n  const rollNum = paramRollNum || storedRollNum || \"\"; // Use URL rollNum, fallback to localStorage\n\n  const [examResults, setExamResults] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (rollNum) {\n      fetchResults();\n    }\n  }, [rollNum]); // Fetch results when rollNum changes\n\n  const fetchResults = async () => {\n    setError(\"\"); // Clear previous errors\n    try {\n      const response = await axios.get(`http://localhost:5000/api/student/exam-result/${rollNum}`);\n      setExamResults(response.data.examResult);\n    } catch (err) {\n      setError(\"Student not found or server error\");\n      setExamResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"View Exam Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this), examResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exam Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Marks Obtained\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: examResults.map((exam, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: exam.examName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exam.subName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exam.marksObtained\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No exam results found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Result, \"dxAVYQWzo8HQCXoFGWcribZs/qM=\", false, function () {\n  return [useParams];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","Result","_s","rollNum","paramRollNum","storedRollNum","localStorage","getItem","examResults","setExamResults","error","setError","fetchResults","response","get","data","examResult","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","border","map","exam","index","examName","subName","marksObtained","_c","$RefreshReg$"],"sources":["E:/PROJECT/SCHOOL MANAGEMENT SYSTEM 2/frontend/src/pages/student/Result.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Result = () => {\r\n    const { rollNum: paramRollNum } = useParams(); // Get rollNum from URL\r\n    const storedRollNum = localStorage.getItem(\"rollNum\"); // Get rollNum from localStorage\r\n    const rollNum = paramRollNum || storedRollNum || \"\"; // Use URL rollNum, fallback to localStorage\r\n\r\n    const [examResults, setExamResults] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (rollNum) {\r\n            fetchResults();\r\n        }\r\n    }, [rollNum]); // Fetch results when rollNum changes\r\n\r\n    const fetchResults = async () => {\r\n        setError(\"\"); // Clear previous errors\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/student/exam-result/${rollNum}`);\r\n            setExamResults(response.data.examResult);\r\n        } catch (err) {\r\n            setError(\"Student not found or server error\");\r\n            setExamResults([]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>View Exam Results</h2>\r\n\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n            {examResults.length > 0 ? (\r\n                <table border=\"1\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Exam Name</th>\r\n                            <th>Subject</th>\r\n                            <th>Marks Obtained</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {examResults.map((exam, index) => (\r\n                            <tr key={index}>\r\n                                <td>{exam.examName}</td>\r\n                                <td>{exam.subName}</td>\r\n                                <td>{exam.marksObtained}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p>No exam results found.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Result;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}